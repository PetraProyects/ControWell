@using ControWell.Client
@using ControWell.Shared
@inject HttpClient Http

<div style="width:100%;margin:5px;padding:5px;border-radius:10px;border:solid 2px gray;display:flex;justify-content:space-around;align-items:center;flex-wrap:wrap ">
    <div style="width:200px;height:80px;background-color:cadetblue;border:solid 2px blue;border-radius:5px;display:flex;justify-content:center;align-items:center;margin:5px">
        <button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="#FpDescargar" aria-controls="offcanvasScrolling">Recibir</button>
    </div>
    <div style="width:200px;height:80px;background-color:cadetblue;border:solid 2px blue;border-radius:5px;display:flex;justify-content:center;align-items:center;margin:5px">
        <h6>Recibos (Hoy): </h6>
        <h6 style="color:burlywood">@CantidadDesp </h6>
    </div>
    <div style="width:200px;height:80px;background-color:cadetblue;border:solid 2px blue;border-radius:5px;display:flex;justify-content:center;align-items:center;margin:5px">
        <h6>Recibos NSV Hoy: </h6>
        <h6 style="color:burlywood">@BlsDesHoy Bls</h6>
    </div>
    <div style="width:200px;height:80px;background-color:cadetblue;border:solid 2px blue;border-radius:5px;display:flex;justify-content:center;align-items:center;margin:5px">
        <h6>Recibos NSV Ayer: </h6>
        <h6 style="color:burlywood">@BlsDesAyer Bls</h6>
    </div>
</div>
<div style="overflow:auto">
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th scope="col">ACCION</th>
                <th scope="col">No. DOCU TRAN</th>
                <th scope="col">FIN DE TRANSITO</th>
                <th scope="col">LLAMADO DESCARGAR</th>
                <th scope="col">INICIO ENTREGA</th>
                <th scope="col">FIN ENTREGA PRODUCTO</th>
                <th scope="col">ORIGEN</th>
                <th scope="col">COD ORIGEN</th>
                <th scope="col">DESTINO</th>
                <th scope="col">COD DESTINO</th>
                <th scope="col">COD RUTA</th>
                <th scope="col">MATERIAL</th>
                <th scope="col">COD MATERIAL</th>
                <th scope="col">CÉDULA</th>
                <th scope="col">CONDUCTOR</th>
                <th scope="col">PLACA </th>
                <th scope="col">TANQUE</th>
                <th scope="col">EMPRESA TR</th>
                <th scope="col">SELLOS</th>
                <th scope="col">GUIA</th>
                <th scope="col">GOV (Bls)</th>
                <th scope="col">GSV (Bls)</th>
                <th scope="col">NETO (Bls)</th>
                <th scope="col">BS&W</th>
                <th scope="col">TEMP °F</th>
                <th scope="col">API 60° F</th>
                <th scope="col">FACTOR TEMP</th>
                <th scope="col">INCERT EXP U (%)</th>
                <th scope="col">INCERT EXP U (Bls)</th>
                <th scope="col">OBSERV</th>
                <th scope="col">GUT 2</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var i in Formatos)
            {
                <tr>
                    <td scope="col">ACCION</td>
                    <td scope="col">@i.DocTr</td>
                    <td scope="col">@i.FinTransito</td>
                    <td scope="col">@i.LlamadoDescargue</td>
                    <td scope="col">@i.InicioEntrega</td>
                    <td scope="col">@i.FinEntrega</td>
                    <td scope="col">@i.Ruta.Origen</td>
                    <td scope="col">@i.Ruta.CodOrigen</td>
                    <td scope="col">@i.Ruta.Destino</td>
                    <td scope="col">@i.Ruta.CodDestino</td>
                    <td scope="col">@i.Ruta.CodRuta</td>
                    <td scope="col">@i.MaterialDesc</td>
                    <td scope="col">@i.CodMaterial</td>
                    <td scope="col">@i.Cedula</td>
                    <td scope="col">@i.NombreConductor</td>
                    <td scope="col">@i.Placa </td>
                    <td scope="col">@i.Tanque</td>
                    <td scope="col">@i.EmpresaTr</td>
                    <td scope="col">@i.Sellos</td>
                    <td scope="col">@i.Guia</td>
                    <td scope="col">@Math.Round(i.GovDescarga,2)</td>
                    <td scope="col">@Math.Round(i.GsvDescarga,2)</td>
                    <td scope="col">@Math.Round(i.NsvDescarga,2)</td>
                    <td scope="col">@Math.Round(i.BswDescarga,2)</td>
                    <td scope="col">@Math.Round(i.TempDescarga,2)</td>
                    <td scope="col">@Math.Round(i.Api60Descarga,2)</td>
                    <td scope="col">@Math.Round(i.FactorTempDescarga,5)</td>
                    <td scope="col">@i.IncertidumbreExpaPorcentDescarga</td>
                    <td scope="col">@i.IncertidumbreExpaBslDescarga</td>
                    <td scope="col">@i.Observaciones</td>
                    <td scope="col">@i.Gut2</td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div class="offcanvas offcanvas-end" data-bs-scroll="true" data-bs-backdrop="false" tabindex="-1" id="FpDescargar" aria-labelledby="offcanvasScrollingLabel">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="offcanvasScrollingLabel">Recibo Nafta</h5>
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <DescargueForm />
    </div>
</div>
@code {

    FormatoDescargueNaf formato = new FormatoDescargueNaf();
    public static List<FormatoDescargueNaf> Formatos = new List<FormatoDescargueNaf>();
    bool verPrev = false;
    bool verTabla = true;
    int CantidadDesp = 0;
    double BlsDesHoy = 0;
    double BlsDesAyer = 0;
    protected override async Task OnInitializedAsync()
    {
        await Actualizar();
    }

    async Task Actualizar()
    {
        var resFor = await Http.GetFromJsonAsync<List<FormatoDescargueNaf>>("api/FormatoDescargueNaf");
        if (resFor != null)
            Formatos = resFor;

        var despHoy = Formatos.Where(x => x.FinEntrega >= DateTime.Today).ToList();
        var despAyer = Formatos.Where(x => x.FinEntrega >= DateTime.Today.AddDays(-1) && x.FinEntrega <= DateTime.Today).ToList();
        CantidadDesp = despHoy.Count();
        foreach (var i in despHoy)
        {
            BlsDesHoy += i.NsvDescarga;
        }
        foreach (var j in despAyer)
        {
            BlsDesAyer += j.NsvDescarga;
        }
        BlsDesHoy = Math.Round(BlsDesHoy, 2);
        BlsDesAyer = Math.Round(BlsDesAyer, 2);
    }
}
