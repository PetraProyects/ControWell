 @inject HttpClient Http
 @inject SweetAlertService Swal
 @inject IJSRuntime JS
@using CurrieTechnologies.Razor.SweetAlert2
@inject NavigationManager Navigation
<!-- ======= Contact Section ======= -->
<div @onmousemove=Actualizar>
    <section id="contact" class="contact" style="background: rgb(34,195,158);
background: linear-gradient(225deg, rgba(34,195,158,1) 0%, rgba(87,102,130,1) 100%);border-radius:5px">
        <div class="container">
            <div class="row">
                <div class="col-lg-12" data-aos="fade-up" data-aos-delay="100">
                    <div class="php-email-form mt-4">
                        <div class="form-group mt-3">
                            <h3 style="color:beige">@cinta.Nombre</h3>
                        </div>
                        @foreach (var i in Niveles)
                        {
                            <div class="row">
                                <div class="col-md-4 form-group">
                                    <b style="color:beige">@i.Nominal</b>
                                </div>
                                <div class="col-md-4 form-group mt-3 mt-md-0">
                                    <p style="color:beige">@i.Correccion</p>
                                </div>
                                <div class="col-md-4 form-group mt-3 mt-md-0">
                                    <button class="btn btn-warning" @onclick="(()=>Eliminar(i))"><i class="bi bi-trash3"></i></button>
                                </div>
                            </div>
                        }
                        <EditForm Model="nivel">
                            <div class="row">
                                <div class="col-md-6 form-group">
                                    <input type="number" @bind-value=nivel.Nominal placeholder="Nominal" class="form-control" />
                                </div>
                                <div class="col-md-6 form-group mt-3 mt-md-0">
                                    <input type="number" @bind-value=nivel.Correccion placeholder="Correccion" class="form-control" />
                                </div>
                            </div>
                        </EditForm>

                        <div class="my-3">
                            <div class="sent-message"><b style="color:beige">Recuerde configurar los rangos de la cinta</b> </div>
                        </div>
                    </div>
                    <div class="text-center"><button class="btn btn-primary" @onclick=GuardarMiNivel>Guardar Nivel</button></div>
                    <br />
                </div>
            </div>
        </div>
    </section><!-- End Contact Section -->
</div>


@code {
    [Parameter]
    public Cinta? cinta { get; set; }
    NivelesDeLaCinta nivel = new NivelesDeLaCinta();
    public static List<NivelesDeLaCinta> Niveles = new List<NivelesDeLaCinta>();
    //Lita de Tipo de fluido
    protected override async Task OnInitializedAsync()
    {

        await Actualizar(); 
    }
    async Task Actualizar()
    {
        var niveles = await Http.GetFromJsonAsync<List<NivelesDeLaCinta>>("api/NivelesDeLaCinta");
        Niveles = niveles.Where(x => x.CintaId == cinta.Id).ToList();
    }
    public static List<string> Descripciones = new List<string>
        {
            {"Crudo"},{"Refinado"}
    };

    async Task GuardarMiNivel()
    {        
        var resultado = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Guardar",
                Text = "¿ Estas seguro que deseas guardar ?",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true,
                ConfirmButtonText = "Guardar",
                CancelButtonText = "Cancelar"
            });

        var confirmado = !string.IsNullOrEmpty(resultado.Value);

        if (confirmado)
        {
            nivel.Id = 0;
            //nivel.Cita = cinta;
            nivel.CintaId = cinta.Id;
            var respuesta = await Http.PostAsJsonAsync("api/NivelesDeLaCinta", nivel);
            await Actualizar();
            var exito = await Swal.FireAsync(new SweetAlertOptions
                {
                    Position = "center",
                    Title = "Guardado Correctamente",
                    Icon = SweetAlertIcon.Success,
                    ShowCancelButton = false,
                    Timer = 1500
                });
        }
    }

    async Task Eliminar(NivelesDeLaCinta niv)
    {
        await Http.DeleteAsync($"api/NivelesDeLaCinta/{niv.Id}");
        await Actualizar();
    }
}
