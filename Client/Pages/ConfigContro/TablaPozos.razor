 @inject HttpClient Http
 @inject SweetAlertService Swal
 @inject IJSRuntime JS
@using CurrieTechnologies.Razor.SweetAlert2
@inject NavigationManager Navigation
<div style="overflow:auto">
    <table class="table table-success table-striped">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Ubicación</th>
                <th>Operadora</th>
                <th>Comentario</th>
                <th>Estado</th>
                <th>Editar</th>
                <th>Eliminar</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var i in Pozos)
            {
                <tr>
                    <td>@i.NombrePozo</td>
                    <td>@i.Ubicacion</td>
                    <td>@i.Operadora</td>
                    <td>@i.Comentario</td>
                    <td>@i.Estado</td>
                    <td>
                        <button type="button" class="btn btn-primary" @onclick="(()=>AsignarEdicion(i))" data-bs-toggle="modal" data-bs-target="#EditarPozo">
                            <i class="bi bi-pencil-square"></i>
                        </button>
                    </td>
                    <td>
                        <button type="button" class="btn btn-warning" @onclick="(()=>Eliminar(i))">
                            <i class="bi bi-trash3-fill"></i>
                        </button>
                    </td>
                </tr>
            }

        </tbody>
    </table>
</div>
<div style="display:flex;justify-content:center">
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#NuevoPozoModal">
        Nuevo Pozo
    </button>
</div>
<div class="modal fade" id="NuevoPozoModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <FormularioPozo />
        </div>
    </div>
</div>
<div class="modal fade" id="EditarPozo" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <EditaPozo NuevoPozo="asigPozo" />
        </div>
    </div>
</div>
@code {
    public static List<Pozo> Pozos = new List<Pozo>();
    Pozo asigPozo = new Pozo();
    async Task ActualizarDatos()
    {
        var resultado = await Http.GetFromJsonAsync<List<Pozo>>("api/Pozo");
        if (resultado != null)
            Pozos = resultado;
    }
    protected override async Task OnInitializedAsync()
    {
        await ActualizarDatos();
    }
    async Task Eliminar(Pozo poz)
    {
        var resultado = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Eliminar",
                Text = "¿ Estas seguro que deseas eliminar ?",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true,
                ConfirmButtonText = "Eliminar",
                CancelButtonText = "Cancelar"
            });

        var confirmado = !string.IsNullOrEmpty(resultado.Value);

        if (confirmado)
        {
            await Http.DeleteAsync($"api/Pozo/{poz.Id}");
            await ActualizarDatos();
            var exito = await Swal.FireAsync(new SweetAlertOptions
                {
                    Position = "center",
                    Title = "Eliminado Correctamente",
                    Icon = SweetAlertIcon.Success,
                    ShowCancelButton = false,
                    Timer = 1500
                });
        }
    }

    async Task AsignarEdicion(Pozo pozo)
    {
        asigPozo = pozo;
    }
}
